{"version":3,"sources":["serviceWorker.js","Components/powerButton.js","Components/infoMusic.js","Components/musicSource.js","Containers/musicContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","PowerButton","props","className","class","type","id","ids","Info","detail","musicInfo","bankOne","keyCode","keyTrigger","url","bankTwo","ContainMusic","listeners","event","state","Power","keys","cheked","chnager","filter","length","getButton","document","getElementById","playAudio","Audio","animate","backgroundColor","duration","play","controlVolume","setState","buttonClickFunction","filterMusic","tunes","Number","target","buttons","newVol","volume","value","power","i","p","$","click","fadeToggle","addEventListener","this","removeEventListener","RenderButtons","map","button","key","onClick","min","max","onChange","React","Component","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5f88808.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst PowerButton = (props) => {\r\n    return (\r\n       <div className={props.class}>\r\n         <label className=\"switch\">\r\n          <input type=\"checkbox\" id= {props.ids}/>\r\n          <span className=\"slider\"></span>\r\n         </label>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PowerButton;","import React from 'react';\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <p>{props.detail.musicInfo}</p>\r\n    )\r\n}\r\n\r\nexport default Info;","export const bankOne = [{\r\n    keyCode: 49,\r\n    keyTrigger: '1',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  },\r\n   {\r\n    keyCode: 50,\r\n    keyTrigger: '2',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  },\r\n   {\r\n    keyCode: 51,\r\n    keyTrigger: '3',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  },\r\n   {\r\n    keyCode: 97,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  }, \r\n  {\r\n    keyCode: 101,\r\n    keyTrigger: 'E',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  },\r\n   {\r\n    keyCode: 102,\r\n    keyTrigger: 'F',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  },\r\n   {\r\n    keyCode: 108,\r\n    keyTrigger: 'L',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  },\r\n   {\r\n    keyCode: 106,\r\n    keyTrigger: 'J',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  },\r\n   {\r\n    keyCode: 110,\r\n    keyTrigger: 'N',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  },\r\n];\r\n\r\nexport const bankTwo = [{\r\n  keyCode: 49,\r\n  keyTrigger: '1',\r\n  id: 'Chord-1',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n}, \r\n{\r\n  keyCode: 50,\r\n  keyTrigger: '2',\r\n  id: 'Chord-2',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n}, \r\n{\r\n  keyCode: 51,\r\n  keyTrigger: '3',\r\n  id: 'Chord-3',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n},\r\n {\r\n  keyCode: 97,\r\n  keyTrigger: 'A',\r\n  id: 'Shaker',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n}, \r\n{\r\n  keyCode: 101,\r\n  keyTrigger: 'E',\r\n  id: 'Open-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n},\r\n {\r\n  keyCode: 102,\r\n  keyTrigger: 'F',\r\n  id: 'Closed-HH',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n},\r\n {\r\n  keyCode: 108,\r\n  keyTrigger: 'L',\r\n  id: 'Punchy-Kick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n},\r\n {\r\n  keyCode: 106,\r\n  keyTrigger: 'J',\r\n  id: 'Side-Stick',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n}, \r\n{\r\n  keyCode: 110,\r\n  keyTrigger: 'N',\r\n  id: 'Snare',\r\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n}];\r\n\r\n","import React from 'react';\r\nimport PowerButton from '../Components/powerButton';\r\nimport Info from '../Components/infoMusic';\r\nimport {bankOne, bankTwo} from '../Components/musicSource';\r\nimport 'jquery';\r\nimport $ from 'jquery';\r\n\r\nclass ContainMusic extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        musicInfo: 'musicInfo',\r\n        chnager: bankTwo,\r\n        power: false\r\n    }\r\n  }\r\n\r\n  listeners = (event) =>{\r\n    if(this.state.Power){\r\n       const keys = event.keyCode;\r\n       const cheked = this.state.chnager.filter(keyCode => {\r\n       return keyCode.keyCode === keys;\r\n     })\r\n    \r\n       if(cheked.length !== 0){\r\n\r\n       const getButton = document.getElementById(cheked[0].keyCode);\r\n       const playAudio = new Audio(cheked[0].url);\r\n       getButton.animate([\r\n        \r\n           { backgroundColor: 'red' },\r\n           { backgroundColor: 'red' }\r\n      ], { \r\n            duration: 50,\r\n      }); \r\n       playAudio.play();\r\n       this.controlVolume(playAudio)\r\n       this.setState({\r\n         musicInfo: cheked[0].id\r\n      })                  \r\n     }\r\n    }\r\n  }\r\n\r\n  buttonClickFunction = (event) => {\r\n    const filterMusic = this.state.chnager.filter(tunes => {\r\n      return tunes.keyCode === Number(event.target.id)\r\n    });\r\n    const playAudio = new Audio(filterMusic[0].url);\r\n    const buttons = document.getElementById(event.target.id);\r\n    playAudio.play();\r\n    this.controlVolume(playAudio);\r\n    this.setState({\r\n      musicInfo: filterMusic[0].id\r\n   }) \r\n   buttons.animate([\r\n        \r\n        { backgroundColor: 'red' },\r\n        { backgroundColor: 'red' }\r\n    ], { \r\n       duration: 50,\r\n    });\r\n   }\r\n\r\n  controlVolume = (newVol) => {\r\n    const volume = document.getElementById('vol').value;\r\n    newVol.volume = volume / 100;\r\n    this.setState({musicInfo: `Volume: ${volume}`});\r\n  }\r\n\r\n  componentDidMount(){\r\n    let i = 2 , p = 0;\r\n    const onOffButton = () => {\r\n      if(i%2 === 0){\r\n        this.setState({\r\n          Power: true\r\n        })\r\n      }else{\r\n        this.setState({\r\n          Power: false\r\n        })\r\n      }\r\n      i++;\r\n    } \r\n\r\n    const tuneChanger = () => {\r\n        if(p%2 === 0){\r\n          this.setState({\r\n            chnager: bankOne,\r\n            musicInfo: 'Heater kit'\r\n          })\r\n        }else{\r\n          this.setState({\r\n            chnager: bankTwo,\r\n            musicInfo: 'Smooth Piano kit'\r\n          })\r\n        }\r\n        p++;\r\n    }\r\n\r\n      $('#pbtn').click(()=> {\r\n        $(\"button\").fadeToggle('slow');\r\n        onOffButton();\r\n      })\r\n\r\n      $('#changer').click(() => {\r\n        tuneChanger();\r\n      })\r\n  \r\n     window.addEventListener('keypress', this.listeners);\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    window.removeEventListener('keypress', this.listeners);\r\n  }\r\n\r\n  render(){\r\n    const RenderButtons = bankTwo.map(button => {\r\n      return (\r\n        <button key={button.id} id={button.keyCode} onClick={this.buttonClickFunction}>{button.keyTrigger} </button>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n\r\n        <div className=\"btn\">\r\n          {RenderButtons}\r\n        </div>\r\n\r\n        <div className=\"extra\">\r\n          <div>\r\n           <p>Power</p>\r\n           <PowerButton ids=\"pbtn\" class='noChange'/>\r\n          </div>\r\n        \r\n         <div className=\"info\">\r\n           <Info detail={this.state}/>\r\n         </div>\r\n\r\n         <div>\r\n           <input type=\"range\" min=\"0\" max=\"100\" onChange={this.controlVolume} id='vol'/>\r\n         </div>\r\n\r\n         <div>\r\n           <p>Bank</p>\r\n           <PowerButton ids='changer' class=\"change\"/>\r\n         </div>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n      <p id='spl'>Create your music</p>  \r\n      </>\r\n  )\r\n  }\r\n\r\n }\r\n \r\n\r\nexport default ContainMusic;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Containers/music.css'\nimport * as serviceWorker from './serviceWorker';\nimport ContainMusic from './Containers/musicContainer';\n\nReactDOM.render(<ContainMusic />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}